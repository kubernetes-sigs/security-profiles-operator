apiVersion: v1
kind: Namespace
metadata:
  name: seccomp-operator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: seccomp-operator
  namespace: seccomp-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: config-map-reader
  namespace: seccomp-operator
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: config-map-reader-binding
  namespace: seccomp-operator
subjects:
- kind: ServiceAccount
  name: seccomp-operator
  namespace: seccomp-operator
roleRef:
  kind: Role
  name: config-map-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: seccomp-operator
  namespace: seccomp-operator
spec:
  selector:
    matchLabels:
      name: seccomp-operator
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
      labels:
        name: seccomp-operator
    spec:
      serviceAccountName: seccomp-operator
      initContainers:
        - name: non-root-enabler
          image: busybox
          # Creates folder /var/lib/kubelet/seccomp/operator and sets 2000:2000 as its owner.
          # This is required to allow the main container to run as non-root.
          command: ["/bin/sh", "-c"]
          args:
            - >
              if [ ! -d "/var/lib/kubelet/seccomp/operator" ]; then
                /bin/mkdir -p /var/lib/kubelet/seccomp/operator &&
                chmod 0744 /var/lib/kubelet/seccomp/operator &&
                /bin/chown -R 2000:2000 /var/lib/kubelet/seccomp/operator;
              fi
          volumeMounts:
          - mountPath: /var/lib/kubelet
            name: kubelet-path
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
              add: ["CHOWN"]
          resources:
            requests:
              memory: "32Mi"
              cpu: "100m"
              ephemeral-storage: "10Mi"
            limits:
              memory: "64Mi"
              cpu: "250m"
              ephemeral-storage: "50Mi"
      containers:
        - name: seccomp-operator
          image: securityoperators/seccomp-operator:latest
          imagePullPolicy: Always
          env:
          - name: NAMESPACE_TO_WATCH
            value: seccomp-operator
          volumeMounts:
          - mountPath: /var/lib/kubelet
            name: kubelet-path
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2000
            runAsGroup: 2000
            capabilities:
              drop: ["ALL"]
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
              ephemeral-storage: "50Mi"
            limits:
              memory: "128Mi"
              cpu: "300m"
              ephemeral-storage: "200Mi"
      volumes:
      - name: kubelet-path
        hostPath:
          path: /var/lib/kubelet
          type: Directory
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: seccomp-operator
  name: default-profiles
  annotations:
    seccomp.security.kubernetes.io/profile: "true"
data:
  nginx-1.19.1.json: |-
    {"defaultAction":"SCMP_ACT_ERRNO","architectures":["SCMP_ARCH_X86_64","SCMP_ARCH_X86","SCMP_ARCH_X32"],"syscalls":[{"names":["accept4","access","arch_prctl","bind","brk","capget","capset","chdir","chown","clone","close","connect","dup2","epoll_create","epoll_ctl","epoll_pwait","epoll_wait","eventfd2","execve","exit","exit_group","faccessat","fadvise64","fchdir","fchown","fcntl","fgetxattr","fsetxattr","fstat","fstatfs","futex","getcwd","getdents","getdents64","getegid","geteuid","getgid","getpid","getppid","getrlimit","getuid","ioctl","io_setup","listen","lseek","mkdir","mmap","mprotect","munmap","nanosleep","newfstatat","open","openat","pipe","prctl","pread64","prlimit64","pwrite64","read","recvfrom","recvmsg","rename","rt_sigaction","rt_sigprocmask","rt_sigreturn","rt_sigsuspend","sched_getaffinity","seccomp","sendfile","sendmsg","setgid","setgroups","setitimer","set_robust_list","setsockopt","set_tid_address","setuid","sigaltstack","socket","socketpair","stat","statfs","sysinfo","umask","uname","unlink","utimensat","wait4","write","writev"],"action":"SCMP_ACT_ALLOW","args":[],"comment":"","includes":{},"excludes":{}}]}
