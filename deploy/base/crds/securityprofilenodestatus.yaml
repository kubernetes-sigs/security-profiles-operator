
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: securityprofilenodestatuses.security-profiles-operator.x-k8s.io
spec:
  group: security-profiles-operator.x-k8s.io
  names:
    kind: SecurityProfileNodeStatus
    listKind: SecurityProfileNodeStatusList
    plural: securityprofilenodestatuses
    shortNames:
    - spns
    singular: securityprofilenodestatus
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .nodeName
      name: Node
      priority: 10
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SecurityProfileNodeStatus is a per-node status of a security
          profile
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          nodeName:
            type: string
          status:
            description: ProfileState defines the state that the profile is in. A
              profile in this context refers to a SeccompProfile or a SELinux profile,
              the states are shared between them as well as the management API.
            type: string
        required:
        - nodeName
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
