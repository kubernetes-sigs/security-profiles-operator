apiVersion: v1
kind: Namespace
metadata:
  name: seccomp-operator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: seccomp-operator
  namespace: seccomp-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: config-map-reader
  namespace: seccomp-operator
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: config-map-reader-binding
  namespace: seccomp-operator
subjects:
- kind: ServiceAccount
  name: seccomp-operator
  namespace: seccomp-operator
roleRef:
  kind: Role
  name: config-map-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: seccomp-operator
  namespace: seccomp-operator
spec:
  selector:
    matchLabels:
      name: seccomp-operator
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
      labels:
        name: seccomp-operator
    spec:
      serviceAccountName: seccomp-operator
      initContainers:
        - name: non-root-enabler
          image: busybox 
          # Creates folder /var/lib/kubelet/seccomp/operator and sets 2000:2000 as its owner.
          # This is required to allow the main container to run as non-root.
          command: ["/bin/sh", "-c"]
          args:
            - >
              if [ ! -d "/var/lib/kubelet/seccomp/operator" ]; then 
                /bin/mkdir -p /var/lib/kubelet/seccomp/operator && 
                chmod 0744 /var/lib/kubelet/seccomp/operator && 
                /bin/chown -R 2000:2000 /var/lib/kubelet/seccomp; 
              fi
          volumeMounts:
          - mountPath: /var/lib/kubelet
            name: kubelet-path
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
              add: ["CHOWN"]
      containers:
        - name: seccomp-operator
          image: securityoperators/seccomp-operator:latest
          imagePullPolicy: Always
          env:
            - name: NAMESPACE_TO_WATCH
              value: seccomp-operator
          volumeMounts:
          - mountPath: /var/lib/kubelet
            name: kubelet-path
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2000
            runAsGroup: 2000
            capabilities:
              drop: ["ALL"]
      volumes:
      - name: kubelet-path
        hostPath:
          path: /var/lib/kubelet
          type: Directory