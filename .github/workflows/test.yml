name: test
on:
  push:
    branches:
      - main
  pull_request:
env:
  GO_VERSION: '1.18'
permissions:
  actions: none
  checks: none
  contents: none
  deployments: none
  id-token: none
  issues: none
  discussions: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none
jobs:
  analyze:
    permissions:

      # write security-events is required by all codeql-action workflows
      security-events: write

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0
      - uses: github/codeql-action/init@26567f6a492cf20b8a8a6913432a4f1b834b12be # v1.0.24
        with:
          languages: go
      - uses: github/codeql-action/autobuild@26567f6a492cf20b8a8a6913432a4f1b834b12be # v1.0.24
      - uses: github/codeql-action/analyze@26567f6a492cf20b8a8a6913432a4f1b834b12be # v1.0.24

  coverage:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0
      - uses: actions/setup-go@331ce1d993939866bb63c32c6cbbfd48fa76fc57 # v2.1.4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y libseccomp-dev libelf-dev libapparmor-dev
          sudo hack/install-libbpf.sh
      - run: make test-unit
      - uses: codecov/codecov-action@f32b3a3741e1053eb607407145bc9619351dc93b # v2.1.0
        with:
          files: build/coverage.out
          flags: unittests
          verbose: true

  image:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0
      - run: make image
      - run: podman save -o image.tar security-profiles-operator
      - uses: actions/upload-artifact@27121b0bdffd731efa15d66772be8dc71245d074 # v2.2.4
        with:
          name: image
          path: image.tar

  e2e-fedora:
    needs: image

    # runs-on not set to macos-11 as vagrant currently not available and stable on macos BigSur
    # https://github.com/actions/virtual-environments/issues/2999
    runs-on: macos-10.15
    timeout-minutes: 90
    env:
      RUN: ./hack/ci/run-fedora.sh
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0
      - uses: actions/cache@48af2dc4a9e8278b89d7fa154b955c30c6aaab09 # v2.1.7
        with:
          path: |
            ~/.vagrant.d/boxes
          key: e2e-fedora-${{ hashFiles('hack/ci/Vagrantfile-fedora') }}
          restore-keys: e2e-fedora-
      - uses: actions/download-artifact@3be87be14a055c47b01d3bd88f8fe02320a9bb60 # v2.0.10
        with:
          name: image
          path: .
      - name: Boot Virtual Machine
        run: make vagrant-up-fedora
      - name: Show environment information
        run: |
          $RUN kubectl wait --for=condition=ready --timeout=60s node 127.0.0.1
          $RUN kubectl get nodes -o wide
      - name: Set up git config
        run: |
          $RUN git config --global --add safe.directory /vagrant
      - name: Run E2E tests
        run: $RUN hack/ci/e2e-fedora.sh
      - name: Print generated RBAC rules
        run: $RUN hack/ci/print-rbac.sh

  e2e-ubuntu:
    needs: image

    # runs-on not set to macos-11 as vagrant currently not available and stable on macos BigSur
    # https://github.com/actions/virtual-environments/issues/2999
    runs-on: macos-10.15
    timeout-minutes: 90
    env:
      RUN: ./hack/ci/run-ubuntu.sh
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0
      - uses: actions/cache@48af2dc4a9e8278b89d7fa154b955c30c6aaab09 # v2.1.7
        with:
          path: |
            ~/.vagrant.d/boxes
          key: e2e-ubuntu-${{ hashFiles('hack/ci/Vagrantfile-ubuntu') }}
          restore-keys: e2e-ubuntu-
      - uses: actions/download-artifact@3be87be14a055c47b01d3bd88f8fe02320a9bb60 # v2.0.10
        with:
          name: image
          path: .
      - name: Boot Virtual Machine
        run: make vagrant-up-ubuntu
      - name: Show environment information
        run: |
          $RUN kubectl wait --for=condition=ready --timeout=60s node ubuntu2110
          $RUN kubectl get nodes -o wide
      - name: Set up git config
        run: |
          $RUN git config --global --add safe.directory /vagrant
      - name: Run E2E tests
        run: $RUN hack/ci/e2e-ubuntu.sh

  e2e-flatcar:
    needs: image

    # runs-on not set to macos-11 as vagrant currently not available and stable on macos BigSur
    # https://github.com/actions/virtual-environments/issues/2999
    runs-on: macos-10.15
    timeout-minutes: 90
    env:
      RUN: ./hack/ci/run-flatcar.sh
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0
      - name: Vagrant box version
        id: vagrant-box
        run: |
          echo "::set-output name=version::$(curl -s  https://stable.release.flatcar-linux.net/amd64-usr/current/flatcar_production_vagrant.json | jq '.versions[0].version' | tr -d '".')"
        shell: bash
      - uses: actions/cache@48af2dc4a9e8278b89d7fa154b955c30c6aaab09 # v2.1.7
        with:
          path: |
            ~/.vagrant.d/boxes
          key: e2e-flatcar-${{ steps.vagrant-box.outputs.version }}-${{ hashFiles('hack/ci/Vagrantfile-flatcar') }}
          restore-keys: e2e-flatcar-${{ steps.vagrant-box.outputs.version }}-
      - name: Upgrade vagrant box
        run: |
          ln -sf hack/ci/Vagrantfile-flatcar Vagrantfile
          vagrant box update
      - uses: actions/download-artifact@3be87be14a055c47b01d3bd88f8fe02320a9bb60 # v2.0.10
        with:
          name: image
          path: .
      - name: Boot Virtual Machine
        run: make vagrant-up-flatcar
      - name: Show environment information
        run: |
          $RUN kubectl wait --for=condition=ready --timeout=600s node localhost
          $RUN kubectl get nodes -o wide
      - name: Run E2E tests
        run: $RUN hack/ci/e2e-flatcar-dev-container.sh
