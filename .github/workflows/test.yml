name: test
on:
  push:
    branches:
      - main
  pull_request:
env:
  GO_VERSION: '1.22'

permissions: {}

jobs:
  analyze:
    permissions:

      # write security-events is required by all codeql-action workflows
      security-events: write

    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - uses: github/codeql-action/init@c4fb451437765abf5018c6fbf22cce1a7da1e5cc # v2.17.1
        with:
          languages: go
      - uses: github/codeql-action/autobuild@c4fb451437765abf5018c6fbf22cce1a7da1e5cc # v2.17.1
      - uses: github/codeql-action/analyze@c4fb451437765abf5018c6fbf22cce1a7da1e5cc # v2.17.1

  coverage:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install dependencies
        run: sudo hack/install-packages
      - run: make test-unit
      - uses: codecov/codecov-action@5ecb98a3c6b747ed38dc09f787459979aebb39be # v4.3.1
        with:
          files: build/coverage.out
          flags: unittests
          verbose: true

  image:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - run: hack/install-crun
      - run: make image
        env:
          XDG_RUNTIME_DIR: ''
      - run: podman save -o image.tar security-profiles-operator
      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: image
          path: image.tar

  e2e-fedora:
    needs: image
    runs-on: ubuntu-22.04
    timeout-minutes: 90
    env:
      RUN: ./hack/ci/run-fedora.sh
    steps:
      - name: Set up vagrant
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update
          sudo apt-get install -y vagrant virtualbox
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          name: image
          path: .
      - name: Boot Virtual Machine
        run: make vagrant-up-fedora
      - name: Show environment information
        run: |
          $RUN kubectl wait --for=condition=ready --timeout=60s nodes --all
          $RUN kubectl get nodes -o wide
      - name: Set up git config
        run: |
          $RUN git config --global --add safe.directory /vagrant
      - name: Run E2E tests
        run: $RUN hack/ci/e2e-fedora.sh
      - name: Run Flaky E2E tests
        continue-on-error: true
        run: |
          $RUN "echo \"export E2E_TEST_FLAKY_TESTS_ONLY=true\" >> /vagrant/hack/ci/env.sh"
          $RUN hack/ci/e2e-fedora.sh

  e2e-ubuntu:
    needs: image
    runs-on: ubuntu-22.04
    timeout-minutes: 90
    env:
      RUN: ./hack/ci/run-ubuntu.sh
    steps:
      - name: Set up vagrant
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update
          sudo apt-get install -y vagrant virtualbox
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          name: image
          path: .
      - name: Boot Virtual Machine
        run: make vagrant-up-ubuntu
      - name: Show environment information
        run: |
          $RUN kubectl wait --for=condition=ready --timeout=60s nodes --all
          $RUN kubectl get nodes -o wide
      - name: Set up git config
        run: |
          $RUN git config --global --add safe.directory /vagrant
      - name: Run E2E tests
        run: $RUN hack/ci/e2e-ubuntu.sh
      - name: Run Flaky E2E tests
        continue-on-error: true
        run: |
          $RUN "echo \"export E2E_TEST_FLAKY_TESTS_ONLY=true\" >> /vagrant/hack/ci/env.sh"
          $RUN hack/ci/e2e-ubuntu.sh

  e2e-flatcar:
    needs: image
    runs-on: ubuntu-22.04
    timeout-minutes: 90
    env:
      RUN: ./hack/ci/run-flatcar.sh
    steps:
      - name: Set up vagrant
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update
          sudo apt-get install -y vagrant virtualbox
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Vagrant box version
        id: vagrant-box
        run: |
          echo "version=$(curl -s  https://stable.release.flatcar-linux.net/amd64-usr/current/flatcar_production_vagrant.json | jq '.versions[0].version' | tr -d '".')" >> $GITHUB_OUTPUT
        shell: bash
      - name: Upgrade vagrant box
        run: |
          ln -sf hack/ci/Vagrantfile-flatcar Vagrantfile
          vagrant box update
      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          name: image
          path: .
      - name: Boot Virtual Machine
        run: make vagrant-up-flatcar
      - name: Show environment information
        run: |
          $RUN kubectl wait --for=condition=ready --timeout=600s node localhost
          $RUN kubectl get nodes -o wide
      - name: Run E2E tests
        run: $RUN hack/ci/e2e-flatcar-dev-container.sh
      - name: Run Flaky E2E tests
        continue-on-error: true
        run: |
          $RUN "echo \"export E2E_TEST_FLAKY_TESTS_ONLY=true\" >> /vagrant/hack/ci/env-flatcar.sh"
          $RUN hack/ci/e2e-flatcar-dev-container.sh

  e2e-spoc:
    runs-on: ubuntu-22.04
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install dependencies
        run: sudo hack/install-packages
      - run: make test-spoc-e2e

  baseprofiles:
    needs: image
    runs-on: ubuntu-22.04
    timeout-minutes: 90
    env:
      RUN: ./hack/ci/run-ubuntu.sh
    steps:
      - name: Set up vagrant
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update
          sudo apt-get install -y vagrant virtualbox
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          name: image
          path: .
      - name: Boot Virtual Machine
        run: make vagrant-up-ubuntu
      - name: Show environment information
        run: |
          $RUN kubectl wait --for=condition=ready --timeout=60s nodes --all
          $RUN kubectl get nodes -o wide
      - name: Set up git config
        run: |
          $RUN git config --global --add safe.directory /vagrant
      - name: Record baseprofiles
        run: $RUN hack/ci/baseprofiles.sh

  typos:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - uses: crate-ci/typos@d503507db9c5d116c79135435b149cd0f27d726e # v1.21.0
        with:
          config: .typos.toml
