// Copyright 2025 The Sigstore Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: rekor/v2/rekor_service.proto

package protobuf

import (
	v1 "github.com/sigstore/protobuf-specs/gen/pb-go/rekor/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request for a full or partial tile (see https://github.com/C2SP/C2SP/blob/main/tlog-tiles.md#merkle-tree)
type TileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	L     uint32                 `protobuf:"varint,1,opt,name=L,proto3" json:"L,omitempty"`
	// N must be either an index encoded as zero-padded 3-digit path elements, e.g. "x123/x456/789",
	// and may end with ".p/<W>", where "<W>" is a uint8
	N             string `protobuf:"bytes,2,opt,name=N,proto3" json:"N,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TileRequest) Reset() {
	*x = TileRequest{}
	mi := &file_rekor_v2_rekor_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TileRequest) ProtoMessage() {}

func (x *TileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rekor_v2_rekor_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TileRequest.ProtoReflect.Descriptor instead.
func (*TileRequest) Descriptor() ([]byte, []int) {
	return file_rekor_v2_rekor_service_proto_rawDescGZIP(), []int{0}
}

func (x *TileRequest) GetL() uint32 {
	if x != nil {
		return x.L
	}
	return 0
}

func (x *TileRequest) GetN() string {
	if x != nil {
		return x.N
	}
	return ""
}

// Request for a full or partial entry bundle (see https://github.com/C2SP/C2SP/blob/main/tlog-tiles.md#log-entries)
type EntryBundleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// N must be either an index encoded as zero-padded 3-digit path elements, e.g. "x123/x456/789",
	// and may end with ".p/<W>", where "<W>" is a uint8
	N             string `protobuf:"bytes,1,opt,name=N,proto3" json:"N,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntryBundleRequest) Reset() {
	*x = EntryBundleRequest{}
	mi := &file_rekor_v2_rekor_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntryBundleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryBundleRequest) ProtoMessage() {}

func (x *EntryBundleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rekor_v2_rekor_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryBundleRequest.ProtoReflect.Descriptor instead.
func (*EntryBundleRequest) Descriptor() ([]byte, []int) {
	return file_rekor_v2_rekor_service_proto_rawDescGZIP(), []int{1}
}

func (x *EntryBundleRequest) GetN() string {
	if x != nil {
		return x.N
	}
	return ""
}

var File_rekor_v2_rekor_service_proto protoreflect.FileDescriptor

const file_rekor_v2_rekor_service_proto_rawDesc = "" +
	"\n" +
	"\x1crekor/v2/rekor_service.proto\x12\x15dev.sigstore.rekor.v2\x1a\x1cgoogle/api/annotations.proto\x1a\x19google/api/httpbody.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x14sigstore_rekor.proto\x1a\x14rekor/v2/entry.proto\")\n" +
	"\vTileRequest\x12\f\n" +
	"\x01L\x18\x01 \x01(\rR\x01L\x12\f\n" +
	"\x01N\x18\x02 \x01(\tR\x01N\"\"\n" +
	"\x12EntryBundleRequest\x12\f\n" +
	"\x01N\x18\x01 \x01(\tR\x01N2\xc8\x03\n" +
	"\x05Rekor\x12\x85\x01\n" +
	"\vCreateEntry\x12).dev.sigstore.rekor.v2.CreateEntryRequest\x1a+.dev.sigstore.rekor.v1.TransparencyLogEntry\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/api/v2/log/entries\x12d\n" +
	"\aGetTile\x12\".dev.sigstore.rekor.v2.TileRequest\x1a\x14.google.api.HttpBody\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/api/v2/tile/{L}/{N=**}\x12v\n" +
	"\x0eGetEntryBundle\x12).dev.sigstore.rekor.v2.EntryBundleRequest\x1a\x14.google.api.HttpBody\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/api/v2/tile/entries/{N=**}\x12Y\n" +
	"\rGetCheckpoint\x12\x16.google.protobuf.Empty\x1a\x14.google.api.HttpBody\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/api/v2/checkpointB}\n" +
	"\x1bdev.sigstore.proto.rekor.v2B\x0eRekorV2ServiceP\x01Z6github.com/sigstore/rekor-tiles/pkg/generated/protobuf\xea\x02\x13Sigstore::Rekor::V2b\x06proto3"

var (
	file_rekor_v2_rekor_service_proto_rawDescOnce sync.Once
	file_rekor_v2_rekor_service_proto_rawDescData []byte
)

func file_rekor_v2_rekor_service_proto_rawDescGZIP() []byte {
	file_rekor_v2_rekor_service_proto_rawDescOnce.Do(func() {
		file_rekor_v2_rekor_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rekor_v2_rekor_service_proto_rawDesc), len(file_rekor_v2_rekor_service_proto_rawDesc)))
	})
	return file_rekor_v2_rekor_service_proto_rawDescData
}

var file_rekor_v2_rekor_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_rekor_v2_rekor_service_proto_goTypes = []any{
	(*TileRequest)(nil),             // 0: dev.sigstore.rekor.v2.TileRequest
	(*EntryBundleRequest)(nil),      // 1: dev.sigstore.rekor.v2.EntryBundleRequest
	(*CreateEntryRequest)(nil),      // 2: dev.sigstore.rekor.v2.CreateEntryRequest
	(*emptypb.Empty)(nil),           // 3: google.protobuf.Empty
	(*v1.TransparencyLogEntry)(nil), // 4: dev.sigstore.rekor.v1.TransparencyLogEntry
	(*httpbody.HttpBody)(nil),       // 5: google.api.HttpBody
}
var file_rekor_v2_rekor_service_proto_depIdxs = []int32{
	2, // 0: dev.sigstore.rekor.v2.Rekor.CreateEntry:input_type -> dev.sigstore.rekor.v2.CreateEntryRequest
	0, // 1: dev.sigstore.rekor.v2.Rekor.GetTile:input_type -> dev.sigstore.rekor.v2.TileRequest
	1, // 2: dev.sigstore.rekor.v2.Rekor.GetEntryBundle:input_type -> dev.sigstore.rekor.v2.EntryBundleRequest
	3, // 3: dev.sigstore.rekor.v2.Rekor.GetCheckpoint:input_type -> google.protobuf.Empty
	4, // 4: dev.sigstore.rekor.v2.Rekor.CreateEntry:output_type -> dev.sigstore.rekor.v1.TransparencyLogEntry
	5, // 5: dev.sigstore.rekor.v2.Rekor.GetTile:output_type -> google.api.HttpBody
	5, // 6: dev.sigstore.rekor.v2.Rekor.GetEntryBundle:output_type -> google.api.HttpBody
	5, // 7: dev.sigstore.rekor.v2.Rekor.GetCheckpoint:output_type -> google.api.HttpBody
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_rekor_v2_rekor_service_proto_init() }
func file_rekor_v2_rekor_service_proto_init() {
	if File_rekor_v2_rekor_service_proto != nil {
		return
	}
	file_rekor_v2_entry_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rekor_v2_rekor_service_proto_rawDesc), len(file_rekor_v2_rekor_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rekor_v2_rekor_service_proto_goTypes,
		DependencyIndexes: file_rekor_v2_rekor_service_proto_depIdxs,
		MessageInfos:      file_rekor_v2_rekor_service_proto_msgTypes,
	}.Build()
	File_rekor_v2_rekor_service_proto = out.File
	file_rekor_v2_rekor_service_proto_goTypes = nil
	file_rekor_v2_rekor_service_proto_depIdxs = nil
}
