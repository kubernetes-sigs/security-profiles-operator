apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  labels:
    app: security-profiles-operator
  name: seccompprofiles.security-profiles-operator.x-k8s.io
spec:
  group: security-profiles-operator.x-k8s.io
  names:
    kind: SeccompProfile
    listKind: SeccompProfileList
    plural: seccompprofiles
    shortNames:
    - sp
    singular: seccompprofile
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.localhostProfile
      name: LocalhostProfile
      priority: 10
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: SeccompProfile is a cluster level specification for a seccomp
          profile. See https://github.com/opencontainers/runtime-spec/blob/master/config-linux.md#seccomp
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SeccompProfileSpec defines the desired state of SeccompProfile.
            properties:
              architectures:
                description: the architecture used for system calls
                items:
                  enum:
                  - SCMP_ARCH_NATIVE
                  - SCMP_ARCH_X86
                  - SCMP_ARCH_X86_64
                  - SCMP_ARCH_X32
                  - SCMP_ARCH_ARM
                  - SCMP_ARCH_AARCH64
                  - SCMP_ARCH_MIPS
                  - SCMP_ARCH_MIPS64
                  - SCMP_ARCH_MIPS64N32
                  - SCMP_ARCH_MIPSEL
                  - SCMP_ARCH_MIPSEL64
                  - SCMP_ARCH_MIPSEL64N32
                  - SCMP_ARCH_PPC
                  - SCMP_ARCH_PPC64
                  - SCMP_ARCH_PPC64LE
                  - SCMP_ARCH_S390
                  - SCMP_ARCH_S390X
                  - SCMP_ARCH_PARISC
                  - SCMP_ARCH_PARISC64
                  - SCMP_ARCH_RISCV64
                  type: string
                type: array
              baseProfileName:
                description: BaseProfileName is the name of base profile (in the same
                  namespace) that will be unioned into this profile. Base profiles
                  can be references as remote OCI artifacts as well when prefixed
                  with `oci://`.
                type: string
              defaultAction:
                description: the default action for seccomp
                enum:
                - SCMP_ACT_KILL
                - SCMP_ACT_KILL_PROCESS
                - SCMP_ACT_KILL_THREAD
                - SCMP_ACT_TRAP
                - SCMP_ACT_ERRNO
                - SCMP_ACT_TRACE
                - SCMP_ACT_ALLOW
                - SCMP_ACT_LOG
                - SCMP_ACT_NOTIFY
                type: string
              flags:
                description: list of flags to use with seccomp(2)
                items:
                  enum:
                  - SECCOMP_FILTER_FLAG_TSYNC
                  - SECCOMP_FILTER_FLAG_LOG
                  - SECCOMP_FILTER_FLAG_SPEC_ALLOW
                  - SECCOMP_FILTER_FLAG_WAIT_KILLABLE_RECV
                  type: string
                type: array
              listenerMetadata:
                description: opaque data to pass to the seccomp agent
                type: string
              listenerPath:
                description: path of UNIX domain socket to contact a seccomp agent
                  for SCMP_ACT_NOTIFY
                type: string
              syscalls:
                description: match a syscall in seccomp. While this property is OPTIONAL,
                  some values of defaultAction are not useful without syscalls entries.
                  For example, if defaultAction is SCMP_ACT_KILL and syscalls is empty
                  or unset, the kernel will kill the container process on its first
                  syscall
                items:
                  description: Syscall defines a syscall in seccomp.
                  properties:
                    action:
                      description: the action for seccomp rules
                      enum:
                      - SCMP_ACT_KILL
                      - SCMP_ACT_KILL_PROCESS
                      - SCMP_ACT_KILL_THREAD
                      - SCMP_ACT_TRAP
                      - SCMP_ACT_ERRNO
                      - SCMP_ACT_TRACE
                      - SCMP_ACT_ALLOW
                      - SCMP_ACT_LOG
                      - SCMP_ACT_NOTIFY
                      type: string
                    args:
                      description: the specific syscall in seccomp
                      items:
                        description: Arg defines the specific syscall in seccomp.
                        properties:
                          index:
                            description: the index for syscall arguments in seccomp
                            minimum: 0
                            type: integer
                          op:
                            description: the operator for syscall arguments in seccomp
                            enum:
                            - SCMP_CMP_NE
                            - SCMP_CMP_LT
                            - SCMP_CMP_LE
                            - SCMP_CMP_EQ
                            - SCMP_CMP_GE
                            - SCMP_CMP_GT
                            - SCMP_CMP_MASKED_EQ
                            type: string
                          value:
                            description: the value for syscall arguments in seccomp
                            format: int64
                            minimum: 0
                            type: integer
                          valueTwo:
                            description: the value for syscall arguments in seccomp
                            format: int64
                            minimum: 0
                            type: integer
                        required:
                        - index
                        - op
                        type: object
                      maxItems: 6
                      type: array
                    errnoRet:
                      description: the errno return code to use. Some actions like
                        SCMP_ACT_ERRNO and SCMP_ACT_TRACE allow to specify the errno
                        code to return
                      type: string
                    names:
                      description: the names of the syscalls
                      items:
                        type: string
                      type: array
                  required:
                  - action
                  - names
                  type: object
                type: array
            required:
            - defaultAction
            type: object
          status:
            description: SeccompProfileStatus contains status of the deployed SeccompProfile.
            properties:
              activeWorkloads:
                items:
                  type: string
                type: array
              conditions:
                description: Conditions of the resource.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              localhostProfile:
                description: The path that should be provided to the `securityContext.seccompProfile.localhostProfile`
                  field of a Pod or container spec
                type: string
              path:
                type: string
              status:
                description: ProfileState defines the state that the profile is in.
                  A profile in this context refers to a SeccompProfile or a SELinux
                  profile, the states are shared between them as well as the management
                  API.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
