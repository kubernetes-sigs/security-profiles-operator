apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: null
  labels:
    app: security-profiles-operator
  name: selinuxprofiles.security-profiles-operator.x-k8s.io
spec:
  group: security-profiles-operator.x-k8s.io
  names:
    kind: SelinuxProfile
    listKind: SelinuxProfileList
    plural: selinuxprofiles
    singular: selinuxprofile
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.usage
      name: Usage
      type: string
    - jsonPath: .status.status
      name: State
      type: string
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: SelinuxProfile is the Schema for the selinuxprofiles API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SelinuxProfileSpec defines the desired state of SelinuxProfile.
            properties:
              allow:
                additionalProperties:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  type: object
                description: Defines the allow policy for the profile
                type: object
              disabled:
                default: false
                description: Whether the profile is disabled and should be skipped
                  during reconciliation.
                type: boolean
              inherit:
                default:
                - kind: System
                  name: container
                description: A SELinuxProfile or set of profiles that this inherits
                  from. Note that they need to be in the same namespace.
                items:
                  properties:
                    kind:
                      default: System
                      description: The Kind of the policy that this inherits from.
                        Can be a SelinuxProfile object Or "System" if an already installed
                        policy will be used. The allowed "System" policies are available
                        in the SecurityProfilesOperatorDaemon instance.
                      enum:
                      - System
                      - SelinuxProfile
                      type: string
                    name:
                      description: The name of the policy that this inherits from.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              permissive:
                default: false
                description: Permissive, when true will cause the SELinux profile
                  to only log violations instead of enforcing them.
                type: boolean
            required:
            - disabled
            type: object
          status:
            description: SelinuxProfileStatus defines the observed state of SelinuxProfile.
            properties:
              activeWorkloads:
                items:
                  type: string
                type: array
              conditions:
                description: Conditions of the resource.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              status:
                description: ProfileState defines the state that the profile is in.
                  A profile in this context refers to a SeccompProfile or a SELinux
                  profile, the states are shared between them as well as the management
                  API.
                type: string
              usage:
                description: Represents the string that the SelinuxProfile object
                  can be referenced as in a pod seLinuxOptions section.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
